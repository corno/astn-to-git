import * as _et from 'exupery-core-types';
import * as pt from 'exupery-core-types';
export type Raw_Or_Normal_Dictionary<T> = {
    [key: string]: T;
} | pt.Dictionary<T>;
export type Raw_Or_Normal_Array<T> = T[] | pt.Array<T>;
export type Raw_Dictionary<T> = {
    [key: string]: T;
};
export declare const to_raw_array: <T>($: pt.Array<T>) => readonly T[];
export type Dictionary<T_D> = _et.Dictionary<T_D>;
export type List<T_L> = _et.Array<T_L>;
export declare const wrap_dictionary: <T>($: Raw_Or_Normal_Dictionary<T>) => Dictionary<T>;
export declare const wrap_list: <T>($: Raw_Or_Normal_Array<T>) => List<T>;
export declare const wrap_state_group: <T>($: T) => T;
