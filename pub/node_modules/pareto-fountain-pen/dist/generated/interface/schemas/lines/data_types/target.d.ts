import * as _i_core from "../../../core/unconstrained";
export type _T_Directory = _i_core._T_Dictionary<null, _i_core._T_State_Group<null, readonly ['directory', _T_Directory] | readonly ['file', _T_Lines]>>;
export type _T_Lines = _i_core._T_List<null, string>;
export type Directory = _T_Directory;
export type Lines = _T_Lines;
export declare namespace _T_Directory {
    namespace D {
        namespace SG {
            namespace directory {
            }
            type directory = _T_Directory;
            namespace file {
            }
            type file = _T_Lines;
        }
        type SG = readonly ['directory', _T_Directory] | readonly ['file', _T_Lines];
    }
    type D = _i_core._T_State_Group<null, readonly ['directory', _T_Directory] | readonly ['file', _T_Lines]>;
}
export declare namespace _T_Lines {
    type L = string;
}
export declare namespace Directory {
    namespace D {
        namespace SG {
            namespace directory {
            }
            type directory = _T_Directory;
            namespace file {
            }
            type file = _T_Lines;
        }
        type SG = readonly ['directory', _T_Directory] | readonly ['file', _T_Lines];
    }
    type D = _i_core._T_State_Group<null, readonly ['directory', _T_Directory] | readonly ['file', _T_Lines]>;
}
export declare namespace Lines {
    type L = string;
}
