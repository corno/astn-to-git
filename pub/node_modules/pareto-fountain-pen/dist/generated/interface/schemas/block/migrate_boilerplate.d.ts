import * as _i_in from "./data_types/source";
import * as _i_out from "./data_types/target";
export type _T_Block = ($$_: _i_in._T_Block, $$_p: null) => _i_out._T_Block;
export type _T_Block_Part = ($$_: _i_in._T_Block_Part, $$_p: null) => _i_out._T_Block_Part;
export type _T_Directory = ($$_: _i_in._T_Directory, $$_p: null) => _i_out._T_Directory;
export type _T_Group = ($$_: _i_in._T_Group, $$_p: null) => _i_out._T_Group;
export type _T_Group_Part = ($$_: _i_in._T_Group_Part, $$_p: null) => _i_out._T_Group_Part;
export type _T_Node = ($$_: _i_in._T_Node, $$_p: null) => _i_out._T_Node;
export type Block = _T_Block;
export type Block_Part = _T_Block_Part;
export type Directory = _T_Directory;
export type Group = _T_Group;
export type Group_Part = _T_Group_Part;
export type Node = _T_Node;
export declare namespace _T_Block {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Block;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Block;
}
export declare namespace _T_Block_Part {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Block_Part;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Block_Part;
}
export declare namespace _T_Directory {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Directory;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Directory;
}
export declare namespace _T_Group {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Group;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Group;
}
export declare namespace _T_Group_Part {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Group_Part;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Group_Part;
}
export declare namespace _T_Node {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Node;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Node;
}
export declare namespace Block {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Block;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Block;
}
export declare namespace Block_Part {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Block_Part;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Block_Part;
}
export declare namespace Directory {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Directory;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Directory;
}
export declare namespace Group {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Group;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Group;
}
export declare namespace Group_Part {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Group_Part;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Group_Part;
}
export declare namespace Node {
    namespace CONTEXT {
    }
    type CONTEXT = _i_in._T_Node;
    namespace PARAMS {
    }
    namespace RESULT {
    }
    type RESULT = _i_out._T_Node;
}
