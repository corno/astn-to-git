import * as _i_core from "../../../core/resolved";
export type _T_Errors = _i_core._T_State_Group<null, readonly ['device not ready', null] | readonly ['file does not exist', null] | readonly ['file too large', null] | readonly ['node is not a file', null] | readonly ['permission denied', null]>;
export type _T_Parameters = _T_Path;
export type _T_Path = {
    readonly 'escape spaces in path': boolean;
    readonly 'path': string;
};
export type _T_Result = string;
export type Errors = _T_Errors;
export type Parameters = _T_Parameters;
export type Path = _T_Path;
export type Result = _T_Result;
export declare namespace _T_Errors {
    namespace SG {
        type device_not_ready = null;
        type file_does_not_exist = null;
        type file_too_large = null;
        type node_is_not_a_file = null;
        type permission_denied = null;
    }
    type SG = readonly ['device not ready', null] | readonly ['file does not exist', null] | readonly ['file too large', null] | readonly ['node is not a file', null] | readonly ['permission denied', null];
}
export declare namespace _T_Parameters {
}
export declare namespace _T_Path {
    type escape_spaces_in_path = boolean;
    type path = string;
}
export declare namespace Errors {
    namespace SG {
        type device_not_ready = null;
        type file_does_not_exist = null;
        type file_too_large = null;
        type node_is_not_a_file = null;
        type permission_denied = null;
    }
    type SG = readonly ['device not ready', null] | readonly ['file does not exist', null] | readonly ['file too large', null] | readonly ['node is not a file', null] | readonly ['permission denied', null];
}
export declare namespace Parameters {
}
export declare namespace Path {
    type escape_spaces_in_path = boolean;
    type path = string;
}
