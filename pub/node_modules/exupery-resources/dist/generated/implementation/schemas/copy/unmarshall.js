"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Path = exports.Parameters = exports.Errors = void 0;
const _pa = __importStar(require("exupery-core-alg"));
const _i_generic = __importStar(require("../../generic/unmarshall"));
const Errors = ($, $p) => _i_generic.process_unconstrained_state_group($, {
    'states': _pa.dictionary_literal({
        'device not ready': ($) => ['device not ready', _i_generic.process_nothing($, null)],
        'file too large': ($) => ['file too large', _i_generic.process_nothing($, null)],
        'node is not a file': ($) => ['node is not a file', _i_generic.process_nothing($, null)],
        'permission denied': ($) => ['permission denied', _i_generic.process_nothing($, null)],
        'source does not exist': ($) => ['source does not exist', _i_generic.process_nothing($, null)],
    }),
});
exports.Errors = Errors;
const Parameters = ($, $p) => _i_generic.process_group($, {
    'properties': ($) => ({
        'options': _pa.cc(_i_generic.get_entry($, {
            'key': "options",
        }), ($) => _i_generic.process_group($, {
            'properties': ($) => ({
                'errorOnExist': _pa.cc(_i_generic.get_entry($, {
                    'key': "errorOnExist",
                }), ($) => _i_generic.process_optional($, {
                    'value': ($) => _i_generic.process_boolean($, {
                        'deserializer': $p['value deserializers']['boolean'],
                    }),
                })),
                'force': _pa.cc(_i_generic.get_entry($, {
                    'key': "force",
                }), ($) => _i_generic.process_optional($, {
                    'value': ($) => _i_generic.process_boolean($, {
                        'deserializer': $p['value deserializers']['boolean'],
                    }),
                })),
                'recursive': _pa.cc(_i_generic.get_entry($, {
                    'key': "recursive",
                }), ($) => _i_generic.process_optional($, {
                    'value': ($) => _i_generic.process_boolean($, {
                        'deserializer': $p['value deserializers']['boolean'],
                    }),
                })),
            }),
        })),
        'source': _pa.cc(_i_generic.get_entry($, {
            'key': "source",
        }), ($) => (0, exports.Path)($, {
            'value deserializers': $p['value deserializers'],
        })),
        'target': _pa.cc(_i_generic.get_entry($, {
            'key': "target",
        }), ($) => (0, exports.Path)($, {
            'value deserializers': $p['value deserializers'],
        })),
    }),
});
exports.Parameters = Parameters;
const Path = ($, $p) => _i_generic.process_group($, {
    'properties': ($) => ({
        'escape spaces in path': _pa.cc(_i_generic.get_entry($, {
            'key': "escape spaces in path",
        }), ($) => _i_generic.process_boolean($, {
            'deserializer': $p['value deserializers']['boolean'],
        })),
        'path': _pa.cc(_i_generic.get_entry($, {
            'key': "path",
        }), ($) => _i_generic.process_text($, null)),
    }),
});
exports.Path = Path;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5tYXJzaGFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9nZW5lcmF0ZWQvaW1wbGVtZW50YXRpb24vc2NoZW1hcy9jb3B5L3VubWFyc2hhbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzREFBdUM7QUFHdkMscUVBQXNEO0FBTS9DLE1BQU0sTUFBTSxHQUE0QixDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsQ0FDbEcsQ0FBQyxFQUNEO0lBQ0ksUUFBUSxFQUFFLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztRQUM3QixrQkFBa0IsRUFBRSxDQUFDLENBQUMsRUFBdUIsRUFBRSxDQUFDLENBQUMsa0JBQWtCLEVBQUUsVUFBVSxDQUFDLGVBQWUsQ0FDM0YsQ0FBQyxFQUNELElBQUksQ0FDUCxDQUFDO1FBQ0YsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLEVBQXVCLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxlQUFlLENBQ3ZGLENBQUMsRUFDRCxJQUFJLENBQ1AsQ0FBQztRQUNGLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxFQUF1QixFQUFFLENBQUMsQ0FBQyxvQkFBb0IsRUFBRSxVQUFVLENBQUMsZUFBZSxDQUMvRixDQUFDLEVBQ0QsSUFBSSxDQUNQLENBQUM7UUFDRixtQkFBbUIsRUFBRSxDQUFDLENBQUMsRUFBdUIsRUFBRSxDQUFDLENBQUMsbUJBQW1CLEVBQUUsVUFBVSxDQUFDLGVBQWUsQ0FDN0YsQ0FBQyxFQUNELElBQUksQ0FDUCxDQUFDO1FBQ0YsdUJBQXVCLEVBQUUsQ0FBQyxDQUFDLEVBQXVCLEVBQUUsQ0FBQyxDQUFDLHVCQUF1QixFQUFFLFVBQVUsQ0FBQyxlQUFlLENBQ3JHLENBQUMsRUFDRCxJQUFJLENBQ1AsQ0FBQztLQUNMLENBQUM7Q0FDTCxDQUNKLENBQUE7QUExQlksUUFBQSxNQUFNLFVBMEJsQjtBQUNNLE1BQU0sVUFBVSxHQUFnQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQ3RGLENBQUMsRUFDRDtJQUNJLFlBQVksRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNsQixTQUFTLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUNsQyxDQUFDLEVBQ0Q7WUFDSSxLQUFLLEVBQUUsU0FBUztTQUNuQixDQUNKLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQzlCLENBQUMsRUFDRDtZQUNJLFlBQVksRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDbEIsY0FBYyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FDdkMsQ0FBQyxFQUNEO29CQUNJLEtBQUssRUFBRSxjQUFjO2lCQUN4QixDQUNKLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FDakMsQ0FBQyxFQUNEO29CQUNJLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FDdEMsQ0FBQyxFQUNEO3dCQUNJLGNBQWMsRUFBRSxFQUFFLENBQUMscUJBQXFCLENBQUMsQ0FBQyxTQUFTLENBQUM7cUJBQ3ZELENBQ0o7aUJBQ0osQ0FDSixDQUFDO2dCQUNGLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQ2hDLENBQUMsRUFDRDtvQkFDSSxLQUFLLEVBQUUsT0FBTztpQkFDakIsQ0FDSixFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQ2pDLENBQUMsRUFDRDtvQkFDSSxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQ3RDLENBQUMsRUFDRDt3QkFDSSxjQUFjLEVBQUUsRUFBRSxDQUFDLHFCQUFxQixDQUFDLENBQUMsU0FBUyxDQUFDO3FCQUN2RCxDQUNKO2lCQUNKLENBQ0osQ0FBQztnQkFDRixXQUFXLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUNwQyxDQUFDLEVBQ0Q7b0JBQ0ksS0FBSyxFQUFFLFdBQVc7aUJBQ3JCLENBQ0osRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUNqQyxDQUFDLEVBQ0Q7b0JBQ0ksT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUN0QyxDQUFDLEVBQ0Q7d0JBQ0ksY0FBYyxFQUFFLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQztxQkFDdkQsQ0FDSjtpQkFDSixDQUNKLENBQUM7YUFDTCxDQUFDO1NBQ0wsQ0FDSixDQUFDO1FBQ0YsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FDakMsQ0FBQyxFQUNEO1lBQ0ksS0FBSyxFQUFFLFFBQVE7U0FDbEIsQ0FDSixFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFBLFlBQUksRUFDVixDQUFDLEVBQ0Q7WUFDSSxxQkFBcUIsRUFBRSxFQUFFLENBQUMscUJBQXFCLENBQUM7U0FDbkQsQ0FDSixDQUFDO1FBQ0YsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FDakMsQ0FBQyxFQUNEO1lBQ0ksS0FBSyxFQUFFLFFBQVE7U0FDbEIsQ0FDSixFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFBLFlBQUksRUFDVixDQUFDLEVBQ0Q7WUFDSSxxQkFBcUIsRUFBRSxFQUFFLENBQUMscUJBQXFCLENBQUM7U0FDbkQsQ0FDSixDQUFDO0tBQ0wsQ0FBQztDQUNMLENBQ0osQ0FBQTtBQXhGWSxRQUFBLFVBQVUsY0F3RnRCO0FBQ00sTUFBTSxJQUFJLEdBQTBCLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FDMUUsQ0FBQyxFQUNEO0lBQ0ksWUFBWSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ2xCLHVCQUF1QixFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FDaEQsQ0FBQyxFQUNEO1lBQ0ksS0FBSyxFQUFFLHVCQUF1QjtTQUNqQyxDQUNKLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQ2hDLENBQUMsRUFDRDtZQUNJLGNBQWMsRUFBRSxFQUFFLENBQUMscUJBQXFCLENBQUMsQ0FBQyxTQUFTLENBQUM7U0FDdkQsQ0FDSixDQUFDO1FBQ0YsTUFBTSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FDL0IsQ0FBQyxFQUNEO1lBQ0ksS0FBSyxFQUFFLE1BQU07U0FDaEIsQ0FDSixFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUM3QixDQUFDLEVBQ0QsSUFBSSxDQUNQLENBQUM7S0FDTCxDQUFDO0NBQ0wsQ0FDSixDQUFBO0FBMUJZLFFBQUEsSUFBSSxRQTBCaEIifQ==