"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Result = exports.Path = exports.Parameters = exports.Node_Type = exports.Errors = void 0;
const _pa = __importStar(require("exupery-core-alg"));
const _i_generic = __importStar(require("../../generic/unmarshall"));
const Errors = ($, $p) => _i_generic.process_unconstrained_state_group($, {
    'states': _pa.dictionary_literal({
        'node does not exist': ($) => ['node does not exist', _i_generic.process_nothing($, null)],
    }),
});
exports.Errors = Errors;
const Node_Type = ($, $p) => _i_generic.process_unconstrained_state_group($, {
    'states': _pa.dictionary_literal({
        'directory': ($) => ['directory', _i_generic.process_nothing($, null)],
        'file': ($) => ['file', _i_generic.process_nothing($, null)],
    }),
});
exports.Node_Type = Node_Type;
const Parameters = ($, $p) => (0, exports.Path)($, {
    'value deserializers': $p['value deserializers'],
});
exports.Parameters = Parameters;
const Path = ($, $p) => _i_generic.process_group($, {
    'properties': ($) => ({
        'escape spaces in path': _pa.cc(_i_generic.get_entry($, {
            'key': "escape spaces in path",
        }), ($) => _i_generic.process_boolean($, {
            'deserializer': $p['value deserializers']['boolean'],
        })),
        'path': _pa.cc(_i_generic.get_entry($, {
            'key': "path",
        }), ($) => _i_generic.process_text($, null)),
    }),
});
exports.Path = Path;
const Result = ($, $p) => (0, exports.Node_Type)($, {
    'value deserializers': $p['value deserializers'],
});
exports.Result = Result;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5tYXJzaGFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9nZW5lcmF0ZWQvaW1wbGVtZW50YXRpb24vc2NoZW1hcy9zdGF0L3VubWFyc2hhbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzREFBdUM7QUFHdkMscUVBQXNEO0FBTS9DLE1BQU0sTUFBTSxHQUE0QixDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsQ0FDbEcsQ0FBQyxFQUNEO0lBQ0ksUUFBUSxFQUFFLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztRQUM3QixxQkFBcUIsRUFBRSxDQUFDLENBQUMsRUFBdUIsRUFBRSxDQUFDLENBQUMscUJBQXFCLEVBQUUsVUFBVSxDQUFDLGVBQWUsQ0FDakcsQ0FBQyxFQUNELElBQUksQ0FDUCxDQUFDO0tBQ0wsQ0FBQztDQUNMLENBQ0osQ0FBQTtBQVZZLFFBQUEsTUFBTSxVQVVsQjtBQUNNLE1BQU0sU0FBUyxHQUErQixDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsQ0FDeEcsQ0FBQyxFQUNEO0lBQ0ksUUFBUSxFQUFFLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztRQUM3QixXQUFXLEVBQUUsQ0FBQyxDQUFDLEVBQTBCLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUMsZUFBZSxDQUNoRixDQUFDLEVBQ0QsSUFBSSxDQUNQLENBQUM7UUFDRixNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQTBCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsZUFBZSxDQUN0RSxDQUFDLEVBQ0QsSUFBSSxDQUNQLENBQUM7S0FDTCxDQUFDO0NBQ0wsQ0FDSixDQUFBO0FBZFksUUFBQSxTQUFTLGFBY3JCO0FBQ00sTUFBTSxVQUFVLEdBQWdDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsSUFBQSxZQUFJLEVBQ2xFLENBQUMsRUFDRDtJQUNJLHFCQUFxQixFQUFFLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztDQUNuRCxDQUNKLENBQUE7QUFMWSxRQUFBLFVBQVUsY0FLdEI7QUFDTSxNQUFNLElBQUksR0FBMEIsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUMxRSxDQUFDLEVBQ0Q7SUFDSSxZQUFZLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDbEIsdUJBQXVCLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUNoRCxDQUFDLEVBQ0Q7WUFDSSxLQUFLLEVBQUUsdUJBQXVCO1NBQ2pDLENBQ0osRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FDaEMsQ0FBQyxFQUNEO1lBQ0ksY0FBYyxFQUFFLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQztTQUN2RCxDQUNKLENBQUM7UUFDRixNQUFNLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUMvQixDQUFDLEVBQ0Q7WUFDSSxLQUFLLEVBQUUsTUFBTTtTQUNoQixDQUNKLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQzdCLENBQUMsRUFDRCxJQUFJLENBQ1AsQ0FBQztLQUNMLENBQUM7Q0FDTCxDQUNKLENBQUE7QUExQlksUUFBQSxJQUFJLFFBMEJoQjtBQUNNLE1BQU0sTUFBTSxHQUE0QixDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUEsaUJBQVMsRUFDL0QsQ0FBQyxFQUNEO0lBQ0kscUJBQXFCLEVBQUUsRUFBRSxDQUFDLHFCQUFxQixDQUFDO0NBQ25ELENBQ0osQ0FBQTtBQUxZLFFBQUEsTUFBTSxVQUtsQiJ9