import * as _easync from 'exupery-core-async';
import * as _et from 'exupery-core-types';
export declare namespace d {
    type Parameters = {
        program: string;
        args: _et.Array<string>;
    };
    type Result = [
        'success',
        {
            stdout: string;
        }
    ] | ['error', Error];
    type Error = [
        'failed to spawn',
        {
            message: string;
        }
    ] | [
        'non zero exit code',
        {
            exitCode: number;
            stderr: string;
        }
    ];
}
/**
 *
 * The executable being executed is assumed to be side effect free
 * There is no way to give guarantees about that though
 */
export declare const $$: _easync.Guaranteed_Query_Initializer<d.Parameters, d.Result>;
