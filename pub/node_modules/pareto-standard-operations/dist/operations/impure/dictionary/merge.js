"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$$ = void 0;
const _ea = __importStar(require("exupery-core-alg"));
/**
 * Merges two dictionaries into one,
 * All the entries of the context dictionary will be present, each optionally with the entry from the supporting dictionary
 *
 * <
 *   {
 *     `A`: 1
 *     `B`: 2
 *   }
 *   (
 *     'supporting dictionary': {
 *       `A`: 3
 *       `C`: 4
 *     }
 *   )
 * > => {
 *   `A`: (
 *     'context': 1
 *     'supporting': + 3
 *   )
 *   `B`: (
 *     'context': 2
 *     'supporting': -
 *   )
 * }
 */
const $$ = ($, $p) => _ea.build_dictionary(($i) => {
    $.map(($, key) => {
        $i['add entry'](key, {
            'context': $,
            'supporting': $p['supporting dictionary'].__get_entry(key),
        });
    });
});
exports.$$ = $$;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVyZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvb3BlcmF0aW9ucy9pbXB1cmUvZGljdGlvbmFyeS9tZXJnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLHNEQUF1QztBQUd2Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXlCRztBQUNJLE1BQU0sRUFBRSxHQUFHLENBQ2QsQ0FBdUIsRUFDdkIsRUFBMkQsRUFJNUQsRUFBRSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQzlCLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDYixFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxFQUFFO1lBQ2pCLFNBQVMsRUFBRSxDQUFDO1lBQ1osWUFBWSxFQUFFLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUM7U0FDN0QsQ0FBQyxDQUFBO0lBQ04sQ0FBQyxDQUFDLENBQUE7QUFDTixDQUFDLENBQUMsQ0FBQTtBQWJXLFFBQUEsRUFBRSxNQWFiIn0=