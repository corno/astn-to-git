import * as _et from 'exupery-core-types';
export declare const temp_j2d: (number_of_julian_days: number) => string;
export type Temp_Impure = {
    'dictionary': {};
    'list': {
        'reverse': <T>($: _et.Array<T>) => _et.Array<T>;
        'repeat': <T>($: T, count: number) => _et.Array<T>;
    };
    'approximate number': {
        'floor': ($: number) => number;
        'serialize': ($: number) => string;
    };
    'integer': {
        'integer division': ($: number, divisor: number) => number;
        'modulo': ($: number, divisor: number) => number;
        'parse': ($: string) => number;
        'parse hexadecimal': ($: string) => number;
        'parse octal': ($: string) => number;
        'serialize': ($: number) => string;
        'serialize with decimal shift': ($: number, decimal_separator_shift: number, decimal_character: 'comma' | 'period') => string;
    };
    'natural': {
        'parse': ($: string) => number;
        'serialize': ($: number) => string;
        'serialize with decimal shift': ($: number, decimal_separator_shift: number, decimal_character: 'comma' | 'period') => string;
    };
    'text': {
        'split': ($: string, separator: string) => _et.Array<string>;
        'from character list': ($: _et.Array<number>) => string;
    };
};
export declare const $: Temp_Impure;
