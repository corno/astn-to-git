"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$$ = void 0;
const _ei = __importStar(require("exupery-core-internals"));
exports.$$ = {
    'dictionary': {
        'build, overwrite clashing keys': ($) => {
            const temp = {};
            $({
                'add entry': (key, $) => {
                    temp[key] = $;
                }
            });
            return _ei.dictionary_literal(temp);
        },
        'build, ignore clashing keys': ($) => {
            const temp = {};
            $({
                'add entry': (key, $) => {
                    if (temp[key] === undefined) {
                        temp[key] = $;
                    }
                }
            });
            return _ei.dictionary_literal(temp);
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZW1wL3B1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSw0REFBNkM7QUFXaEMsUUFBQSxFQUFFLEdBQWM7SUFDekIsWUFBWSxFQUFFO1FBQ1YsZ0NBQWdDLEVBQUUsQ0FDOUIsQ0FFUyxFQUNRLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEdBQXlCLEVBQUUsQ0FBQTtZQUNyQyxDQUFDLENBQUM7Z0JBQ0UsV0FBVyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO29CQUVwQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFBO2dCQUNqQixDQUFDO2FBQ0osQ0FBQyxDQUFBO1lBQ0YsT0FBTyxHQUFHLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDdkMsQ0FBQztRQUNELDZCQUE2QixFQUFFLENBQzNCLENBRVMsRUFDUSxFQUFFO1lBQ25CLE1BQU0sSUFBSSxHQUF5QixFQUFFLENBQUE7WUFDckMsQ0FBQyxDQUFDO2dCQUNFLFdBQVcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDcEIsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssU0FBUyxFQUFFLENBQUM7d0JBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7b0JBQ2pCLENBQUM7Z0JBQ0wsQ0FBQzthQUNKLENBQUMsQ0FBQTtZQUNGLE9BQU8sR0FBRyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ3ZDLENBQUM7S0FDSjtDQUNKLENBQUEifQ==