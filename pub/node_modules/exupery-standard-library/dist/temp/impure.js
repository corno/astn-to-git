"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$ = exports.temp_j2d = void 0;
const _ei = __importStar(require("exupery-core-internals"));
const temp_j2d = (number_of_julian_days) => {
    const date = new Date((number_of_julian_days - 2440587) * 86400 * 1000);
    return date.toISOString().split('T')[0];
};
exports.temp_j2d = temp_j2d;
exports.$ = {
    'dictionary': {},
    'list': {
        'reverse': ($) => {
            return _ei.array_literal($.__get_raw_copy().slice().reverse());
        },
        'repeat': ($, count) => {
            const result = [];
            for (let i = 0; i < count; i++) {
                result.push($);
            }
            return _ei.array_literal(result);
        },
    },
    'approximate number': {
        'floor': ($) => {
            return Math.floor($);
        },
        'serialize': ($) => {
            return $.toString();
        },
    },
    'integer': {
        'integer division': ($, divisor) => {
            return Math.floor($ / divisor);
        },
        'modulo': ($, divisor) => {
            return $ % divisor;
        },
        'parse': ($) => {
            return parseFloat($);
        },
        'parse hexadecimal': ($) => {
            return parseInt($, 16);
        },
        'parse octal': ($) => {
            return parseInt($, 8);
        },
        'serialize': ($) => {
            return $.toFixed(0);
        },
        'serialize with decimal shift': ($, decimal_separator_shift, decimal_character) => {
            const shifted = $ / (10 ** decimal_separator_shift);
            const stringified = shifted.toFixed(decimal_separator_shift);
            if (decimal_character === 'comma') {
                return stringified.replace('.', ',');
            }
            else {
                return stringified;
            }
        },
    },
    'natural': {
        'parse': ($) => {
            return parseFloat($);
        },
        'serialize': ($) => {
            return $.toFixed(0);
        },
        'serialize with decimal shift': ($, decimal_separator_shift, decimal_character) => {
            const shifted = $ / (10 ** decimal_separator_shift);
            const stringified = shifted.toFixed(decimal_separator_shift);
            if (decimal_character === 'comma') {
                return stringified.replace('.', ',');
            }
            else {
                return stringified;
            }
        },
    },
    'text': {
        'split': ($, separator) => {
            return _ei.array_literal($.split(separator));
        },
        'from character list': ($) => {
            let out = "";
            $.__for_each(($) => {
                out += String.fromCodePoint($);
            });
            return out;
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wdXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RlbXAvaW1wdXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsNERBQTZDO0FBRXRDLE1BQU0sUUFBUSxHQUFHLENBQUMscUJBQTZCLEVBQUUsRUFBRTtJQUN0RCxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQTtJQUN2RSxPQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDM0MsQ0FBQyxDQUFBO0FBSFksUUFBQSxRQUFRLFlBR3BCO0FBa0NZLFFBQUEsQ0FBQyxHQUFnQjtJQUMxQixZQUFZLEVBQUUsRUFDYjtJQUNELE1BQU0sRUFBRTtRQUNKLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFO1lBQ2IsT0FBTyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFBO1FBQ2xFLENBQUM7UUFDRCxRQUFRLEVBQUUsQ0FBSSxDQUFJLEVBQUUsS0FBYSxFQUFnQixFQUFFO1lBQy9DLE1BQU0sTUFBTSxHQUFRLEVBQUUsQ0FBQTtZQUN0QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7Z0JBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDbEIsQ0FBQztZQUNELE9BQU8sR0FBRyxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUNwQyxDQUFDO0tBQ0o7SUFDRCxvQkFBb0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsQ0FBQyxDQUFD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